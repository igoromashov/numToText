describe("Автоматическое тестирование функции numToText", function () {
  it("Нулевое значение, возвращается Ноль рублей 00 копеек", function () {
    assert.equal(numToText(0), "Ноль рублей 00 копеек");
    assert.equal(numToText(0.0), "Ноль рублей 00 копеек");
    assert.equal(numToText(0.0), "Ноль рублей 00 копеек");
    assert.equal(numToText(0.0), "Ноль рублей 00 копеек");
    assert.equal(numToText(0.0), "Ноль рублей 00 копеек");
    assert.equal(numToText("000"), "Ноль рублей 00 копеек");
    assert.equal(numToText("00.0"), "Ноль рублей 00 копеек");
  });
  it("Копейки", function () {
    assert.equal(numToText(0.01), "01 копейка");
    assert.equal(numToText(0.02), "02 копейки");
    assert.equal(numToText(0.03), "03 копейки");
    assert.equal(numToText(0.04), "04 копейки");
    assert.equal(numToText(0.05), "05 копеек");
    assert.equal(numToText(0.06), "06 копеек");
    assert.equal(numToText(0.07), "07 копеек");
    assert.equal(numToText(0.11), "11 копеек");
    assert.equal(numToText(0.17), "17 копеек");
    assert.equal(numToText(0.29), "29 копеек");
    assert.equal(numToText(0.71), "71 копейка");
    assert.equal(numToText(0.99), "99 копеек");
  });
  it("Десятки рублей", function () {
    assert.equal(numToText(11), "Одиннадцать рублей 00 копеек");
    assert.equal(numToText(10), "Десять рублей 00 копеек");
    assert.equal(numToText(20), "Двадцать рублей 00 копеек");
    assert.equal(numToText(21), "Двадцать один рубль 00 копеек");
    assert.equal(numToText(42), "Сорок два рубля 00 копеек");
  });
  it("Сотни рублей", function () {
    assert.equal(numToText(358), "Триста пятьдесят восемь рублей 00 копеек");
    assert.equal(numToText(300), "Триста рублей 00 копеек");
    assert.equal(numToText(100), "Сто рублей 00 копеек");
  });
  it("Тысячи рублей", function () {
    assert.equal(numToText(1000), "Одна тысяча рублей 00 копеек");
    assert.equal(numToText(1001), "Одна тысяча один рубль 00 копеек");
    assert.equal(
      numToText(9999),
      "Девять тысяч девятьсот девяносто девять рублей 00 копеек"
    );
  });
  it("Десятки тысяч рублей", function () {
    assert.equal(
      numToText(63829.79),
      "Шестьдесят три тысячи восемьсот двадцать девять рублей 79 копеек"
    );
    assert.equal(numToText(10000), "Десять тысяч рублей 00 копеек");
    assert.equal(numToText(20100), "Двадцать тысяч сто рублей 00 копеек");
    assert.equal(numToText(30010), "Тридцать тысяч десять рублей 00 копеек");
    assert.equal(numToText(40001), "Сорок тысяч один рубль 00 копеек");
  });
  it("Сотни тысяч рублей", function () {
    assert.equal(
      numToText(328924.17),
      "Триста двадцать восемь тысяч девятьсот двадцать четыре рубля 17 копеек"
    );
    assert.equal(
      numToText(352941.18),
      "Триста пятьдесят две тысячи девятьсот сорок один рубль 18 копеек"
    );
    assert.equal(numToText(100000), "Сто тысяч рублей 00 копеек");
    assert.equal(numToText(100500), "Сто тысяч пятьсот рублей 00 копеек");
    assert.equal(
      numToText(200011),
      "Двести тысяч одиннадцать рублей 00 копеек"
    );
    assert.equal(numToText(700070), "Семьсот тысяч семьдесят рублей 00 копеек");
    assert.equal(numToText(900009), "Девятьсот тысяч девять рублей 00 копеек");
  });
  it("Миллионы рублей", function () {
    assert.equal(
      numToText(3157894.74),
      "Три миллиона сто пятьдесят семь тысяч восемьсот девяносто четыре рубля 74 копейки"
    );
  });
  it("Сотни миллиардов рублей", function () {
    assert.equal(
      numToText(261981357987),
      "Двести шестьдесят один миллиард девятьсот восемьдесят один миллион триста пятьдесят семь тысяч девятьсот восемьдесят семь рублей 00 копеек"
    );
    assert.equal(numToText(100000000000), "Сто миллиардов рублей 00 копеек");
    assert.equal(
      numToText(909999909009),
      "Девятьсот девять миллиардов девятьсот девяносто девять миллионов девятьсот девять тысяч девять рублей 00 копеек"
    );
  });
  it("Триллионы рублей", function () {
    assert.equal(
      numToText(1972154632121.11),
      "Один триллион девятьсот семьдесят два миллиарда сто пятьдесят четыре миллиона шестьсот тридцать две тысячи сто двадцать один рубль 11 копеек"
    );
  });
  it("Предельное значение - 9 триллионов...", function () {
    assert.equal(
      numToText(9999999999999.99),
      "Девять триллионов девятьсот девяносто девять миллиардов девятьсот девяносто девять миллионов девятьсот девяносто девять тысяч девятьсот девяносто девять рублей 99 копеек"
    );
  });
  it("Работа со строками", function () {
    assert.equal(numToText("1000"), "Одна тысяча рублей 00 копеек");
    assert.equal(
      numToText("909999909009"),
      "Девятьсот девять миллиардов девятьсот девяносто девять миллионов девятьсот девять тысяч девять рублей 00 копеек"
    );
    assert.equal(
      numToText("9999999999999.99"),
      "Девять триллионов девятьсот девяносто девять миллиардов девятьсот девяносто девять миллионов девятьсот девяносто девять тысяч девятьсот девяносто девять рублей 99 копеек"
    );
  });
  it("Работа с массивами", function () {
    assert.equal(numToText([10, 0, 0]), "Одна тысяча рублей 00 копеек");
    assert.equal(
      numToText([909999909009]),
      "Девятьсот девять миллиардов девятьсот девяносто девять миллионов девятьсот девять тысяч девять рублей 00 копеек"
    );
    assert.equal(
      numToText(["9999", "999", 999999, ".", 99]),
      "Девять триллионов девятьсот девяносто девять миллиардов девятьсот девяносто девять миллионов девятьсот девяносто девять тысяч девятьсот девяносто девять рублей 99 копеек"
    );
  });
  it("Работа с пробелами", function () {
    assert.equal(
      numToText("26198 1357987"),
      "Двести шестьдесят один миллиард девятьсот восемьдесят один миллион триста пятьдесят семь тысяч девятьсот восемьдесят семь рублей 00 копеек"
    );
    assert.equal(
      numToText(" 1000   000   00000 "),
      "Сто миллиардов рублей 00 копеек"
    );
    assert.equal(
      numToText("909999909  009"),
      "Девятьсот девять миллиардов девятьсот девяносто девять миллионов девятьсот девять тысяч девять рублей 00 копеек"
    );
  });
  it("Превышено предельное значение, тестирование ошибки", function () {
    assert.equal(numToText(99999999999999.99), "ОШИБКА: слишком большое число");
    assert.equal(
      numToText(9999999999999999999999999999999999),
      "ОШИБКА: слишком большое число"
    );
    assert.equal(
      numToText("9999999999999999999999999999999999"),
      "ОШИБКА: слишком большое число"
    );
  });
  it("Ввод невалидных данных", function () {
    assert.equal(numToText("kek"), "ОШИБКА: Невалидные данные");
    assert.equal(numToText("1.1.1"), "ОШИБКА: Невалидные данные");
  });
});
